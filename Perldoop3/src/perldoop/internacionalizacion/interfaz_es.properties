APP_NOMBRE=Perldoop3
APP_VERSION=3.0 Beta 1
APP_DESCRIPCION=Perldoop 3.0: Un compilador fuente-a-fuente Perl-Java.
#Posicional
ARGS_POSICIONAL=Argumentos posicionales
INFILE=Ficheros Perl para ser analizados
#Opcional
ARGS_OPCIONAL=Argumentos opcionales
AYUDA=Muestra este mensaje y se cierra
VERSION=Muestra la versi\u00f3n y se cierra
OUT=Carpeta donde se guardar\u00e1n los ficheros generados, por defecto es el directorio actual
NO_FORMATEAR=Omite el proceso de formateo, el c\u00f3digo fuente se imprimir\u00e1 directamente
COPIAR_COMENTARIOS=Analiza los comentarios del c\u00f3digo Perl
OCULTAR_AVISOS=Oculta los mensajes de aviso
MOSTRAR_ERRORES=Muestra solo los n primeros mensajes de error. En caso de mas de un fichero de entrada, la cuenta se reinicia para cada uno
CODIFICACION=Cambia la codificaci\u00f3n para el fichero de entrada y salida en caso de encontrar errores con la codificaci\u00f3n por defecto de java (Cp1252, ISO 8859-1, ..)
PAQUETES=Establece el paquete padre que contendr\u00e1 todas las clases generadas, en caso de una jerarqu\u00eda deben separarse mediante puntos
LIBRERIA=Genera una librer\u00eda con todas las dependencias necesarias para la ejecuci\u00f3n y la almacena en el directorio de salida
J_IMPORTER=Permite usar clases definidas en java, definidas en la variable de entorno PERLDOOP o en la carpeta/jar 'imports' de la ruta actual, cuando un paquete importado no exista. Por ejemplo, como sustituto de librer\u00edas Perl
#Optimizacion
ARGS_OPTIMIZACION=Argumentos optimizaci\u00f3n
OPTIMIZAR_NULOS=Las operaciones nativas no comprueban si sus argumentos son nulos para aumentar la eficiencia del c\u00f3digo generado, el usuario deber\u00e1 asegurarse de no usar variables o accesos sin inicializar
OPTIMIZAR_INSTANCIAS=Elimina de la traducci\u00f3n instancias de clases que no fueron usadas y no fueron detectadas en el proceso de generaci\u00f3n de c\u00f3digo
OPTIMIZAR_DIAMANTE=Fuerza el uso de la notaci\u00f3n diamante en todas las asignaciones, (esta optimizaci\u00f3n no influye en el rendimiento)
OPTIMIZAR_SENTENCIAS=Elimina todas las expresiones que no generan una sentencia \u00fatil
OPTIMIZAR_MODULOS=Usa la operaci\u00f3n modulo nativa de Java, mayor rendimiento pero solo tiene el mismo comportamiento con n\u00fameros positivos.
#Depuracion
ARGS_DEPURACION=Argumentos depuraci\u00f3n
DEPURACION_TOKENS=Imprime por pantalla todos los tokens creados por el analizador l\u00e9xico
DEPURACION_TERMINALES=Imprime por pantalla todos los terminales creados por el preprocesor de etiquetas
DEPURACION_ARBOL=Imprime el \u00e1rbol de s\u00edmbolos creado por el analizador sint\u00e1ctico
DEPURACION_TRADUCCION=Imprime el \u00e1rbol de s\u00edmbolos con el tipo y el c\u00f3digo generado para cada nodo
DEPURACION_ESTADOS=Realiza una ejecuci\u00f3n parcial de la traducci\u00f3n. \n1:L\u00e9xico, 2:Preprocesador, 3:Sintactico

